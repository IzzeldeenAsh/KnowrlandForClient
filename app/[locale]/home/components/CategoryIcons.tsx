import React, { memo } from 'react';

type IconName = 'all' | 'data' | 'report' | 'insight' | 'manual' | 'course';

interface CategoryIconProps {
  name: IconName;
}

const CategoryIcon: React.FC<CategoryIconProps> = ({ name }) => {
  switch (name) {
    case 'all':
      return (
        <div className='bg-[#F1FAFE] p-2 rounded-md'>
<svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M14.19 0H5.81C2.17 0 0 2.17 0 5.81V14.18C0 17.83 2.17 20 5.81 20H14.18C17.82 20 19.99 17.83 19.99 14.19V5.81C20 2.17 17.83 0 14.19 0ZM15 15.25H5C4.59 15.25 4.25 14.91 4.25 14.5C4.25 14.09 4.59 13.75 5 13.75H15C15.41 13.75 15.75 14.09 15.75 14.5C15.75 14.91 15.41 15.25 15 15.25ZM15 10.75H5C4.59 10.75 4.25 10.41 4.25 10C4.25 9.59 4.59 9.25 5 9.25H15C15.41 9.25 15.75 9.59 15.75 10C15.75 10.41 15.41 10.75 15 10.75ZM15 6.25H5C4.59 6.25 4.25 5.91 4.25 5.5C4.25 5.09 4.59 4.75 5 4.75H15C15.41 4.75 15.75 5.09 15.75 5.5C15.75 5.91 15.41 6.25 15 6.25Z" fill="#3E97FE"/>
</svg>



        </div>
      );
    case 'data':
      return (
        <div className='bg-slate-100 p-2 rounded-md'>
          <svg width="19" height="19" viewBox="0 0 19 19" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M9.24658 0.400391C11.2831 0.400395 13.1856 0.740557 14.6489 1.34766L14.9351 1.47266C15.6265 1.78928 16.1474 2.14632 16.4897 2.50781C16.8323 2.86965 16.9761 3.2123 16.9761 3.51172C16.976 3.81107 16.8321 4.15294 16.4897 4.51465C16.1903 4.83095 15.7544 5.14433 15.187 5.42969L14.9351 5.55078C13.4385 6.23574 11.4186 6.62304 9.24658 6.62305C7.21021 6.62305 5.3077 6.28279 3.84424 5.67578L3.55713 5.55078C2.86583 5.2343 2.34561 4.87619 2.00342 4.51465C1.66114 4.15295 1.51818 3.81108 1.51807 3.51172C1.51807 3.21229 1.661 2.86964 2.00342 2.50781C2.30285 2.19153 2.73879 1.87824 3.30615 1.59277L3.55713 1.47266C5.05431 0.787573 7.07442 0.400391 9.24658 0.400391Z" fill="#041326" stroke="#041326" strokeWidth="0.8"/>
            <path d="M16.9761 7.51575C16.9761 7.8171 16.8322 8.16064 16.4907 8.52258C16.192 8.83907 15.7569 9.15189 15.1909 9.43665L14.9399 9.55676C13.4463 10.2399 11.4254 10.6271 9.24658 10.6271C7.20397 10.6271 5.2998 10.2871 3.83936 9.68176L3.55322 9.55676C2.86354 9.24113 2.34379 8.88431 2.00244 8.52258C1.661 8.16066 1.51807 7.81714 1.51807 7.51575V6.16907C1.8092 6.38604 2.13542 6.59141 2.49756 6.77942L2.90381 6.97766C4.6286 7.76681 6.8821 8.19248 9.24658 8.1925C11.4633 8.1925 13.5819 7.81795 15.2593 7.12122L15.5894 6.97766C16.1159 6.73648 16.5794 6.46473 16.9761 6.16907V7.51575Z" fill="#041326" stroke="#041326" strokeWidth="0.8"/>
            <path d="M16.9761 11.2538C16.976 11.5549 16.8322 11.8977 16.4907 12.2596C16.192 12.5763 15.7572 12.8898 15.1909 13.1747L14.9409 13.2948C13.447 13.9783 11.4255 14.3651 9.24658 14.3651C7.20399 14.3651 5.29977 14.0253 3.83936 13.4198L3.55322 13.2948C2.8634 12.9791 2.3438 12.6215 2.00244 12.2596C1.661 11.8977 1.5181 11.5549 1.51807 11.2538V10.1757C3.18368 11.4224 6.02035 12.1971 9.24658 12.1971C12.4731 12.1971 15.3104 11.4227 16.9761 10.1757V11.2538Z" fill="#041326" stroke="#041326" strokeWidth="0.8"/>
            <path d="M16.9761 15.2582C16.9761 15.5594 16.8322 15.902 16.4907 16.264C16.192 16.5807 15.7571 16.8942 15.1909 17.1791L14.9399 17.2992C13.4464 17.9826 11.4255 18.3695 9.24658 18.3695C7.20389 18.3695 5.29976 18.0297 3.83936 17.4242L3.55322 17.2992C2.8634 16.9835 2.3438 16.626 2.00244 16.264C1.66109 15.9021 1.51808 15.5594 1.51807 15.2582V13.9135C3.18369 15.1604 6.02033 15.9349 9.24658 15.9349C12.4732 15.9349 15.3104 15.1607 16.9761 13.9135V15.2582Z" fill="#041326" stroke="#041326" strokeWidth="0.8"/>
          </svg>
        </div>
      );
    case 'report':
      return (
        <div className='bg-blue-50 p-2 rounded-md'>
          <svg width="23" height="23" viewBox="0 0 23 23" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path opacity="0.4" d="M22.6091 9.69933L21.4829 14.503C20.5175 18.6517 18.6098 20.3295 15.0243 19.9847C14.4497 19.9388 13.8291 19.8353 13.1626 19.6745L11.2319 19.2148C6.43974 18.0771 4.95726 15.7097 6.08348 10.906L7.20971 6.09082C7.43955 5.11399 7.71536 4.26358 8.06012 3.56256C9.40469 0.781477 11.6916 0.0344921 15.53 0.942366L17.4491 1.39056C22.2643 2.51678 23.7353 4.89564 22.6091 9.69933Z" fill="#699DDE"/>
            <path d="M15.0248 19.9848C14.3123 20.4675 13.4159 20.8697 12.3241 21.2259L10.5084 21.8235C5.94602 23.2945 3.54417 22.0649 2.06169 17.5025L0.590708 12.9631C-0.880278 8.40079 0.337882 5.98745 4.90024 4.51646L6.71599 3.91888C7.18716 3.76948 7.63535 3.64307 8.06056 3.56262C7.7158 4.26364 7.43999 5.11405 7.21015 6.09088L6.08392 10.9061C4.9577 15.7098 6.44018 18.0771 11.2324 19.2148L13.163 19.6745C13.8296 19.8354 14.4502 19.9388 15.0248 19.9848Z" fill="#0778B9"/>
            <path d="M17.8175 9.77991C17.7486 9.77991 17.6796 9.76842 17.5992 9.75693L12.0255 8.3434C11.5658 8.22848 11.29 7.75731 11.405 7.29762C11.5199 6.83794 11.9911 6.56213 12.4507 6.67705L18.0244 8.09058C18.4841 8.2055 18.7599 8.67667 18.645 9.13636C18.553 9.51559 18.1968 9.77991 17.8175 9.77991Z" fill="white"/>
            <path d="M14.4504 13.6642C14.3814 13.6642 14.3125 13.6527 14.232 13.6412L10.8878 12.7908C10.4281 12.6759 10.1523 12.2047 10.2673 11.745C10.3822 11.2853 10.8534 11.0095 11.313 11.1244L14.6572 11.9749C15.1169 12.0898 15.3927 12.5609 15.2778 13.0206C15.1859 13.4114 14.8411 13.6642 14.4504 13.6642Z" fill="white"/>
          </svg>
        </div>
      );
    case 'insight':
      return (
        <div className='bg-red-50 p-2 rounded-md'>
<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M17.036 0C21.4101 0 24 2.58993 24 6.96403V17.036C24 21.4101 21.4101 24 17.036 24H6.96403C2.58993 24 0 21.3525 0 16.9784V6.96403C0 2.58993 2.58993 0 6.96403 0H17.036ZM6.84892 12.3741C6.15827 12.3741 5.64029 12.8921 5.64029 13.5827V16.9784C5.64029 17.6691 6.15827 18.187 6.84892 18.187C7.53957 18.187 8.05755 17.6691 8.05755 16.9784V13.5827C8.05755 12.8921 7.53957 12.3741 6.84892 12.3741ZM11.5108 7.02158C10.8201 7.02158 10.3022 7.53957 10.3022 8.23022V16.9784C10.3022 17.6691 10.8201 18.187 11.5108 18.187C12.2014 18.187 12.7194 17.6691 12.7194 16.9784V8.23022C12.7194 7.53957 12.2014 7.02158 11.5108 7.02158ZM15.9424 5.06475C15.2518 5.06475 14.6763 5.69784 14.6763 6.5036V16.6906C14.6763 17.4964 15.2518 18.1295 15.9424 18.1295C16.6331 18.1295 17.2086 17.4964 17.2086 16.6906V6.5036C17.2086 5.69784 16.6331 5.06475 15.9424 5.06475Z" fill="#8A1538"/>
</svg>


        </div>
      );
    case 'manual':
      return (
        <div className='bg-orange-50 p-2 rounded-md'>
          <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M20.5 6.99997V15H6.35C4.78 15 3.5 16.28 3.5 17.85V6.99997C3.5 3 4.5 2 8.50002 2H15.5C19.5 2 20.5 3 20.5 6.99997Z" fill="#F6C001"/>
            <path d="M20.5 15V18.5C20.5 20.43 18.93 22 17 22H7.00002C5.07 22 3.5 20.43 3.5 18.5V17.85C3.5 16.28 4.78 15 6.35 15H20.5Z" fill="#FFDEB2"/>
            <path d="M16 7.74997H7.99997C7.58996 7.74997 7.25 7.41002 7.25 7.00001C7.25 6.59 7.58996 6.25 7.99997 6.25H16C16.41 6.25 16.75 6.59 16.75 7.00001C16.75 7.41002 16.41 7.74997 16 7.74997Z" fill="white"/>
            <path d="M13 11.25H7.99997C7.58996 11.25 7.25 10.91 7.25 10.5C7.25 10.09 7.58996 9.75 7.99997 9.75H13C13.41 9.75 13.75 10.09 13.75 10.5C13.75 10.91 13.41 11.25 13 11.25Z" fill="white"/>
          </svg>
        </div>
      );
    case 'course':
      return (
        <div className='bg-green-50 p-2 rounded-md'>
          <svg width="21" height="21" viewBox="0 0 21 21" fill="none" xmlns="http://www.w3.org/2000/svg">
            <g clipPath="url(#clip0_516_206)">
              <path d="M17.2254 15.2472C17.2254 13.827 16.0741 12.6758 14.6539 12.6758C13.2337 12.6758 12.0825 13.827 12.0825 15.2472C12.0825 15.9759 12.3867 16.6322 12.8737 17.1002V20.1923L14.6539 19.0054L16.4341 20.1923V17.1002C16.9211 16.6322 17.2254 15.9759 17.2254 15.2472Z" fill="#C3D8F2"/>
              <path d="M19.9946 0.807739H1.00557C0.56882 0.807739 0.214355 1.16181 0.214355 1.59895V17.4232C0.214355 17.8599 0.56882 18.2143 1.00557 18.2143H11.2913V17.6854C10.777 16.9816 10.5001 16.1374 10.5001 15.2473C10.5001 12.9568 12.3634 11.0934 14.6539 11.0934C16.9445 11.0934 18.8078 12.9568 18.8078 15.2473C18.8078 16.1378 18.5309 16.982 18.0166 17.6858V18.2143H19.9946C20.4314 18.2143 20.7858 17.8599 20.7858 17.4232V1.59895C20.7858 1.16181 20.4314 0.807739 19.9946 0.807739ZM11.2913 7.92862H4.56601V6.34619H11.2913V7.92862ZM16.4341 4.76378H4.56601V3.18136H16.4341V4.76378Z" fill="#0ABB87"/>
            </g>
            <defs>
              <clipPath id="clip0_516_206">
                <rect width="21" height="21" fill="white"/>
              </clipPath>
            </defs>
          </svg>
        </div>
      );
    default:
      return null;
  }
};

interface CategoryIconBoxProps {
  name: IconName;
  label: string;
  locale: string;
  arLabel: string;
  className?: string;
  isSelected?: boolean;
  onClick?: React.MouseEventHandler<HTMLDivElement>;
  count?: number;
}

export const CategoryIconBox = memo<CategoryIconBoxProps>(({ name, label, locale, arLabel, className, isSelected = false, onClick, count }) => {
  // Define badge colors based on category
  const getBadgeColor = (categoryName: IconName) => {
    switch (categoryName) {
      case 'all':
        return 'bg-blue-500'; // Blue for all
      case 'data':
        return 'bg-gray-800'; // Dark gray for data
      case 'report':
        return 'bg-blue-600'; // Blue for reports
      case 'insight':
        return 'bg-[#891638]'; // Custom red for insights
      case 'manual':
        return 'bg-yellow-500'; // Yellow/orange for manuals
      case 'course':
        return 'bg-green-600'; // Green for courses
      default:
        return 'bg-blue-500';
    }
  };

  return (
    <div className={`group flex flex-col items-center ${className || ''}`} onClick={onClick}>
      <div className={`relative flex h-14 w-14 items-center justify-center rounded-lg border ${isSelected ? 'border-blue-500 bg-blue-50' : 'border-gray-200 bg-white'} p-2 shadow-sm transition-all hover:border-blue-200 hover:bg-blue-50 cursor-pointer`}>
        <CategoryIcon name={name} />
        {count !== undefined && count > 0 && name !=='all'  &&(
          <div className={`absolute -top-2 -right-2 flex h-5 w-10 items-center justify-center rounded-full ${getBadgeColor(name)} text-xs font-bold text-white`}>
            {count > 999 ? '999+' : count}
          </div>
        )}
      </div>
      <span className={`mt-2 text-xs font-medium ${isSelected ? 'text-blue-600' : 'text-gray-600'} group-hover:text-blue-600`}>
        {locale === 'ar' ? arLabel : label}
      </span>
    </div>
  );
});
